name: .NET Core

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
   
    - name: Build
      run: dotnet build /p:UseSharedCompilation=false
      
    - name: Perform CodeQL Analysis
      id: CodeQL_analysis
      uses: github/codeql-action/analyze@v2
    
    - name: Publish to Nuget
      if: ${{ github.event_name =='push' && github.ref == 'refs/heads/main' }}
      run: dotnet msbuild Das.WorkItemSigner.csproj /t:Push
      env:
        NugetApiKey: ${{ secrets.NUGETAPIKEYBYENGOPS }}
    
    - name: Build Executable 
      run: dotnet publish -r win-x64 -p:PublishSingleFile=true --self-contained true --output ./publish
      
    - name: Create tag
      id: create_tag
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          tag=release-main-$(date +%Y%m%d-%H%M%S)
        else
         tag=debug-"${{ github.head_ref }}"-$(date +%Y%m%d-%H%M%S)
        fi
        echo "::set-output name=tag::$tag"
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.create_tag.outputs.tag }}
        release_name: ${{ steps.create_tag.outputs.tag }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./publish/Das.WorkItemSigner.exe
        asset_name: Das.WorkItemSigner.exe
        asset_content_type: application/octet-stream
